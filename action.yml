name: github-action-release-apk
description: This is an action to release your apk to github release
author: gogoadl
branding:
  icon: 'thumbs-up'
  color: 'white'

inputs:
  version:
    description: 'release version'
    required: true
    default: 'v1.0.0'
  asset-name:
    description: 'file name display on releases'
    required: false
    default: 'app.apk'
  base64-keystore:
    description: 'decoded keystore file'
    required: false
    default: 'true'
  key-file:
    description: 'key file for signing apk'
    required: false
    default: 'true'
  keystore-password:
    description: 'Keytstore password for signing apk'
    required: false
    default: 'true'
  keystore-alias:
    description: 'Keystore alias for signing apk'
    required: false
    default: 'true'
  key-password:
    description: 'key password for signing apk'
    required: false
    default: 'true'

runs:
  using: 'composite'
  steps:
    - uses: actions/checkout@v3

    - name: set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      shell: bash

    - name: Generate Keystore file from Github Secrets
      run: |
        echo "${{ inputs.base64-keystore }}" > ./keystore.b64
        base64 -d -i ./keystore.b64 > ./${{ inputs.key-file }}
        cp ./${{ inputs.key-file }} ./app/${{ inputs.key-file }}
      shell: bash

    - name: Build Release APK
      run: |
        bash ./gradlew assembleRelease \
          -Pandroid.injected.signing.store.file=${{ inputs.key-file }} \
          -Pandroid.injected.signing.store.password=${{ inputs.keystore-password }} \
          -Pandroid.injected.signing.key.alias=${{ inputs.keystore-alias }} \
          -Pandroid.injected.signing.key.password=${{ inputs.key-password }} \
          --stacktrace
      shell: bash

    - name: Upload artifact APK
      uses: actions/upload-artifact@v3
      with:
        name: apk
        path: app/build/outputs/apk/release/*.apk

    - name: Download APK
      uses: actions/download-artifact@v1
      with:
        name: ${{ inputs.asset-name }}
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release APK
      id: upload_release_asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./apk/app-release.apk
        asset_name: ${{ inputs.asset-name }}
        asset_content_type: application/vnd.android.package-archive
